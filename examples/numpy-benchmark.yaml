apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: numpy-benchmark
  annotations:
    workflows.argoproj.io/description: |
      Runs a numpy script in a python container.
      The script finds the normal of the dot product of two random matrices.
      Matrix sizes are specified by the input parameter "size".
spec:
  entrypoint: numpy-test
  templates:
  - name: numpy-test
    inputs:
      parameters:
      - name: size
        value: 2000
      - name: memory
        value: 20Gi
    script:
      image: gcr.io/diamond-privreg/ptypy/test_openmpi_full:0.1
      command: ["python"]
      env:
      - name: MKL_NUM_THREADS
        value: "1"
      - name: NUMEXPR_NUM_THREADS
        value: "1"
      - name: OMP_NUM_THREADS
        value: "1"
      source: |
        import numpy as np
        import time

        n = int("{{ inputs.parameters.size }}")
        A = np.random.randn(n,n).astype('float64')
        B = np.random.randn(n,n).astype('float64')
        start_time = time.time()
        nrm = np.linalg.norm(A@B)
        print(" took {} seconds ".format(time.time() - start_time))
        print(" norm = ",nrm)
        print(np.__config__.show())
    podSpecPatch: |
      containers:
      - name: main
        resources:
          requests:
            cpu: "1"
            memory: "{{ inputs.parameters.memory }}"
          limits:
            cpu: "1"
            memory: "{{ inputs.parameters.memory }}"

grafana:
  serviceAccount:
    create: true
  ingress:
    enabled: true
    path: "/"
    hosts:
      - grafana.workflows.diamond.ac.uk
    tls:
      - hosts:
          - grafana.workflows.diamond.ac.uk
        secretName: letsencrypt-grafana-workflows-diamond-ac-uk
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: "https://prometheus.workflows.diamond.ac.uk"
          isDefault: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboardsConfigMaps:
    default: grafana-dashboards


  extraSecretMounts:
    - name: oauth-provider
      secretName: grafana-oauth
      defaultMode: 0440
      mountPath: /etc/secrets/oauth_provider
      readOnly: true
  grafana.ini:
    server:
      domain: grafana.workflows.diamond.ac.uk
      root_url: https://grafana.workflows.diamond.ac.uk
      serve_from_sub_path: true
    auth.generic_oauth:
      enabled: true
      client_id: $__file{/etc/secrets/oauth_provider/client-id}
      client_secret: $__file{/etc/secrets/oauth_provider/client-secret}
      scopes: openid profile email offline_access
      auth_url: https://authn.diamond.ac.uk/realms/master/protocol/openid-connect/auth
      token_url: https://authn.diamond.ac.uk/realms/master/protocol/openid-connect/token
      api_url: https://authn.diamond.ac.uk/realms/master/protocol/openid-connect/userinfo
      use_pkce: true
      use_refresh_token: true
      email_attribute_path: id
prometheus:
  kube-state-metrics:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
  podSecurityPolicy:
    enabled: false
  alertmanager:
    enabled: false
  server:
    baseURL: https://prometheus.workflows.diamond.ac.uk
    resources:
      requests:
        cpu: '2'
        memory: 8Gi
      limits:
        cpu: '4'
        memory: 16Gi
    ingress:
      enabled: true
      hosts:
        - prometheus.workflows.diamond.ac.uk
      path: /
      tls:
        - hosts:
            - prometheus.workflows.diamond.ac.uk
          secretName: letsencrypt-prometheus-workflows-diamond-ac-uk
    persistentVolume:
      enabled: false
    replicaCount: 1
    statefulSet:
      enabled: true
  extraScrapeConfigs: |
    - job_name: 'otel-collector'
      metrics_path: /metrics
      scrape_interval: 30s
      static_configs:
        - targets:
            - "monitoring-opentelemetry-collector.monitoring.svc.cluster.local:9090"

opentelemetry-collector:
  enabled: true
  image:
    repository: otel/opentelemetry-collector-contrib
  mode: deployment
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
  ports:
    prometheus:
      enabled: true
      containerPort: 9090
      servicePort: 9090
      protocol: TCP
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingressClassName: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: otelcollector.workflows.diamond.ac.uk
        paths:
          - path: '/'
            pathType: Prefix
            port: 4318
    tls:
      - secretName: letsencrypt-otelcollector-workflows-diamond-ac-uk
        hosts:
          - otelcollector.workflows.diamond.ac.uk
  resources:
    requests:
      cpu: '4'
      memory: 8Gi
    limits:
      cpu: '8'
      memory: 16Gi
  config:
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: 'kubernetes-pods'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
                  action: replace
                  regex: (https?)
                  target_label: __scheme__
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  target_label: __address__
                - action: labelmap
                  regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                  replacement: __param_$1
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  action: replace
                  target_label: pod
                - source_labels: [__meta_kubernetes_pod_phase]
                  regex: Pending|Succeeded|Failed|Completed
                  action: drop
            - job_name: 'kubernetes-deployments'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
                  regex: deployment
                  action: keep
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  action: replace
                  target_label: pod
            - job_name: 'kubernetes-services'
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
                - source_labels:
                    [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels:
                    [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                  action: replace
                  target_label: __scheme__
                  regex: (https?)
                - source_labels:
                    [__meta_kubernetes_service_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels:
                    [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                  action: replace
                  target_label: __address__
                  regex: (.+?)(?::\d+)?;(\d+)
                  replacement: $1:$2
                - action: labelmap
                  regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                  replacement: __param_$1
                - action: labelmap
                  regex: __meta_kubernetes_service_label_(.+)
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: namespace
                - source_labels: [__meta_kubernetes_service_name]
                  action: replace
                  target_label: service
    exporters:
      prometheus:
        endpoint: "0.0.0.0:9090"
    service:
      pipelines:
        metrics:
          receivers:
            - prometheus
          processors:
            - batch
          exporters:
            - prometheus


apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: workflows-sessionspace
spec:
  validationFailureAction: Enforce
  background: false
  generateExisting: true
  rules:
    - name: copy-artifact-s3-secret
      match:
        resources:
          kinds:
            - Namespace
          selector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      generate:
        synchronize: true
        apiVersion: v1
        kind: Secret
        name: artifact-s3
        namespace: "{{ `{{request.object.metadata.name}}` }}"
        clone:
          namespace: workflows
          name: artifact-s3
    - name: generate-visit-member-service-account
      match:
        resources:
          kinds:
            - ConfigMap
          names:
            - sessionspaces
          selector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
          namespaceSelector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      context:
        - name: values
          configMap:
            name: sessionspaces
            namespace: "{{ `{{request.object.metadata.namespace}}` }}"
      generate:
        apiVersion: v1
        kind: ServiceAccount
        name: visit-member
        namespace: "{{ `{{request.object.metadata.namespace}}` }}"
        data:
          metadata:
            annotations:
              workflows.argoproj.io/rbac-rule: 'sub in {{ `{{values.data.members}}` }}'
              workflows.argoproj.io/rbac-rule-precedence: "1"
            ownerReferences:
              - apiVersion: v1
                kind: ConfigMap
                name: "{{ `{{request.object.metadata.name}}` }}"
                uid: "{{ `{{request.object.metadata.uid}}` }}"
    - name: generate-visit-member-service-account-token
      skipBackgroundRequests: false
      match:
        resources:
          kinds:
            - ServiceAccount
          names:
            - visit-member
          namespaceSelector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      generate:
        apiVersion: v1
        kind: Secret
        name: visit-member.service-account-token
        namespace: "{{ `{{request.namespace}}` }}"
        data:
          type: kubernetes.io/service-account-token
          metadata:
            annotations:
              kubernetes.io/service-account.name: visit-member
            ownerReferences:
              - apiVersion: v1
                kind: ServiceAccount
                name: "{{ `{{request.object.metadata.name}}` }}"
                uid: "{{ `{{request.object.metadata.uid}}` }}"
    - name: generate-visit-member-role-binding
      skipBackgroundRequests: false
      match:
        resources:
          kinds:
            - ServiceAccount
          names:
            - visit-member
          namespaceSelector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      generate:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        name: visit-member
        namespace: "{{ `{{request.namespace}}` }}"
        data:
          metadata:
            ownerReferences:
              - apiVersion: v1
                kind: ServiceAccount
                name: "{{ `{{request.object.metadata.name}}` }}"
                uid: "{{ `{{request.object.metadata.uid}}` }}"
          subjects:
            - kind: ServiceAccount
              name: visit-member
              namespace: "{{ `{{request.object.metadata.namespace}}` }}"
          roleRef:
            kind: ClusterRole
            name: visit-member
            apiGroup: rbac.authorization.k8s.io
    - name: generate-argo-workflow-service-account
      match:
        resources:
          kinds:
            - Namespace
          selector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      generate:
        apiVersion: v1
        kind: ServiceAccount
        name: argo-workflow
        namespace: "{{ `{{request.object.metadata.name}}` }}"
    - name: generate-argo-workflow-role-binding
      skipBackgroundRequests: false
      match:
        resources:
          kinds:
            - ServiceAccount
          names:
            - argo-workflow
          namespaceSelector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      generate:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        name: argo-workflow
        namespace: "{{ `{{request.namespace}}` }}"
        data:
          metadata:
            ownerReferences:
              - apiVersion: v1
                kind: ServiceAccount
                name: "{{ `{{request.object.metadata.name}}` }}"
                uid: "{{ `{{request.object.metadata.uid}}` }}"
          subjects:
            - kind: ServiceAccount
              name: argo-workflow
              namespace: "{{ `{{request.namespace}}` }}"
          roleRef:
            kind: ClusterRole
            name: argo-workflow
            apiGroup: rbac.authorization.k8s.io

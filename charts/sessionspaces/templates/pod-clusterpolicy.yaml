{{- if $.Values.policy.create }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ include "common.names.fullname" $ }}-pod
spec:
  background: false
  validationFailureAction: Enforce
  schemaValidation: false
  rules:
    - name: pod-securitycontext
      match:
        resources:
          kinds:
            - Pod
          namespaceSelector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      context:
        - name: namespace
          variable:
            value: "{{ `{{request.object.metadata.namespace}}` }}"
        - name: workflow
          variable:
            jmesPath: request.object.metadata.ownerReferences[0].name
        - name: uid
          apiCall:
            urlPath: /apis/argoproj.io/v1alpha1/namespaces/{{ `{{ namespace }}` }}/workflows/{{ `{{ workflow }}` }}
            jmesPath: 'metadata.labels | "workflows.diamond.ac.uk/creator-posix-uid"'
        - name: values
          configMap:
            name: sessionspaces
            namespace: "{{ `{{ namespace }}` }}"
      mutate:
        patchStrategicMerge:
          spec:
            securityContext:
              runAsGroup: "{{ `{{values.data.gid | parse_json(@).to_number(@)}}` }}"
              runAsUser: "{{ `{{ uid | parse_json(@).to_number(@) }}` }}"
            containers:
              - (name): "*"
                securityContext:
                  runAsGroup: "{{ `{{values.data.gid | parse_json(@).to_number(@)}}` }}"
                  runAsUser: "{{ `{{ uid | parse_json(@).to_number(@) }}` }}"
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
            initContainers:
              - (name): "*"
                securityContext:
                  runAsGroup: "{{ `{{values.data.gid | parse_json(@).to_number(@)}}` }}"
                  runAsUser: "{{ `{{ uid | parse_json(@).to_number(@) }}` }}"
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
            ephemeralContainers:
              - (name): "*"
                securityContext:
                  runAsGroup: "{{ `{{values.data.gid | parse_json(@).to_number(@)}}` }}"
                  runAsUser: "{{ `{{ uid | parse_json(@).to_number(@) }}` }}"
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
    - name: check-hostpath
      match:
        resources:
          kinds:
            - Pod
          namespaceSelector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      context:
        - name: values
          configMap:
            name: sessionspaces
            namespace: "{{ `{{request.object.metadata.namespace}}` }}"
      validate:
        message: "{{ `The hostPath must point to the session directory ({{values.data.data_directory}})` }}"
        pattern:
          spec:
            volumes:
            - =(hostPath):
                path: "{{ `{{values.data.data_directory}}` }}"
{{- end }}          

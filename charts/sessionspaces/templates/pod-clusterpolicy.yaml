apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: sessionspace-pod
spec:
  background: false
  validationFailureAction: Enforce
  rules:
    - name: pod-securitycontext
      match:
        resources:
          kinds:
            - Pod
          namespaceSelector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      context:
        - name: values
          configMap:
            name: sessionspaces
            namespace: "{{ `{{request.object.metadata.namespace}}` }}"
      mutate:
        patchStrategicMerge:
          spec:
            securityContext:
              runAsGroup: "{{ `{{values.data.gid | parse_json(@).to_number(@)}}` }}"
              runAsUser: {{ .Values.policy.runAsUser }}
            containers:
              - (name): "*"
                securityContext:
                  runAsGroup: "{{ `{{values.data.gid | parse_json(@).to_number(@)}}` }}"
                  runAsUser: {{ .Values.policy.runAsUser }}
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
            initContainers:
              - (name): "*"
                securityContext:
                  runAsGroup: "{{ `{{values.data.gid | parse_json(@).to_number(@)}}` }}"
                  runAsUser: {{ .Values.policy.runAsUser }}
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
    - name: check-hostpath
      match:
        resources:
          kinds:
            - Pod
          namespaceSelector:
            matchLabels:
              app.kubernetes.io/managed-by: sessionspaces
      context:
        - name: values
          configMap:
            name: sessionspaces
            namespace: "{{ `{{request.object.metadata.namespace}}` }}"
      validate:
        message: "{{ `The hostPath ({{request.oldObject.spec.volumes[].hostPath.path}}) must point to the session directory ({{values.data.data_directory}})` }}"
        pattern:
          spec:
            volumes:
            - =(hostPath):
                path: "{{ `{{values.data.data_directory}}` }}"

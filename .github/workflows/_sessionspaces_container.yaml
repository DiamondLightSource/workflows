name: Sessionspaces Container

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      ispyb:
        image: ghcr.io/diamondlightsource/ispyb-database:v3.0.0
        ports:
          - 3306:3306
        env:
          MARIADB_ROOT_PASSWORD: rootpassword
        options: >-
          --health-cmd "/usr/local/bin/healthcheck.sh --defaults-file=/ispyb/.my.cnf --connect"
          --health-interval 1s
          --health-retries 60
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Generate Image Name
        run: echo IMAGE_REPOSITORY=ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]' | tr '[_]' '[\-]')-sessionspaces >> $GITHUB_ENV

      - name: Log in to GitHub Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.IMAGE_REPOSITORY }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0
        with:
          driver-opts: network=host

      - name: Build Image
        uses: docker/build-push-action@v6.13.0
        with:
          build-args: DATABASE_URL=mysql://root:rootpassword@localhost:3306/ispyb_build
          context: backend
          file: backend/Dockerfile.sessionspaces
          target: deploy
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/sessionspaces@') }}
          load: ${{ !(github.event_name == 'push' && startsWith(github.ref, 'refs/tags/sessionspaces@')) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

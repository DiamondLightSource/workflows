name: Graph Proxy Code

on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      ARGO_SERVER_SCHEMA_URL: https://raw.githubusercontent.com/argoproj/argo-workflows/main/api/jsonschema/schema.json
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.1

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1.10.1

      - name: Cache Rust Build
        uses: Swatinem/rust-cache@v2.7.5
        with:
          workspaces: graph-proxy
          shared-key: graph-proxy

      - name: Create argo workflows openapi types file
        run: |
          printf "\n" > graph-proxy/argo-workflows-openapi/src/types.rs

      - name: Check Formatting
        working-directory: graph-proxy
        run: >
          cargo fmt
          --all
          --check

      - name: Lint with Clippy
        working-directory: graph-proxy
        run: >
          cargo clippy
          --all-targets
          --all-features
          --no-deps
          --
          --deny warnings

  test:
    runs-on: ubuntu-latest
    env:
      ARGO_SERVER_SCHEMA_URL: https://raw.githubusercontent.com/argoproj/argo-workflows/main/api/jsonschema/schema.json
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.1

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1.10.1

      - name: Cache Rust Build
        uses: Swatinem/rust-cache@v2.7.5
        with:
          workspaces: graph-proxy
          shared-key: graph-proxy

      - name: Run Tests
        working-directory: graph-proxy
        run: >
          cargo test
          --all-targets
          --all-features

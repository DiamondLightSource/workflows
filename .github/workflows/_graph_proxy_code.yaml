name: Graph Proxy Code

on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      ARGO_SERVER_SCHEMA_URL: https://raw.githubusercontent.com/argoproj/argo-workflows/main/api/jsonschema/schema.json
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.0

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          default: true

      - name: Cache Rust Build
        uses: Swatinem/rust-cache@v2.7.3

      - name: Create argo workflows openapi types file
        run: |
          printf "\n" > graph-proxy/argo-workflows-openapi/src/types.rs

      - name: Check Formatting
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: >
            --manifest-path graph-proxy/Cargo.toml
            --all
            --check

      - name: Lint with Clippy
        uses: actions-rs/cargo@v1.0.3
        with:
          command: clippy
          args: >
            --manifest-path graph-proxy/Cargo.toml
            --all-targets
            --all-features
            --no-deps
            --
            --deny warnings

  test:
    runs-on: ubuntu-latest
    env:
      ARGO_SERVER_SCHEMA_URL: https://raw.githubusercontent.com/argoproj/argo-workflows/main/api/jsonschema/schema.json
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.0

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          default: true

      - name: Cache Rust Build
        uses: Swatinem/rust-cache@v2.7.3

      - name: Test
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: >
            --manifest-path graph-proxy/Cargo.toml
            --all-targets
            --all-features

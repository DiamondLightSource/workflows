name: Kyverno Policy

on:
  push:
  pull_request:

jobs:
  test-policy:
    # Deduplicate jobs from pull requests and branch pushes within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4.1.7

      - name: Setup Helm
        uses: azure/setup-helm@v4

      - name: Setup Chainsaw
        uses: kyverno/action-install-chainsaw@v0.2.8

      - name: Create kind cluster
        uses: helm/kind-action@v1.10.0

      - name: Install chart dependencies
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo add kyverno https://kyverno.github.io/kyverno/
          helm repo update
          helm dep build charts/workflows

      - name: Install Kyvenro and wait for CRDs
        run: |
          helm install kyverno kyverno/kyverno --namespace kyverno --create-namespace --set cleanupController.enabled=false --set reportsController.enabled=false
          helm get manifest --namespace kyverno kyverno | yq e '. | select(.kind == "CustomResourceDefinition")' | kubectl wait --for=condition=Established --timeout=60s -f -

      - name: Deploy and wait for Policies, ClusterRoles, and ClusterRoleBindings
        run: |
          helm template sessionspaces charts/sessionspaces | yq e '. | select(.kind == "Policy" or .kind == "ClusterPolicy" or .kind == "ClusterRole" or .kind == "ClusterRoleBinding")' | tee -a /tmp/policies.yaml | kubectl apply -f -
          helm template workflows charts/workflows | yq e '. | select(.kind == "Policy" or .kind == "ClusterPolicy" or .kind == "ClusterRole" or .kind == "ClusterRoleBinding")' | tee -a /tmp/policies.yaml | kubectl apply -f -
          cat /tmp/policies.yaml | yq e '. | select(.kind == "Policy" or .kind == "ClusterPolicy")' | kubectl wait --for=condition=Ready --timeout=60s -f -

      - name: Wait for Kyverno
        run: |
          helm get manifest --namespace kyverno kyverno | yq e '. | select(.kind == "Deployment")' | kubectl wait --for=condition=Available --timeout=60s -f -

      - name: Run Chainsaw Tests
        run: chainsaw test

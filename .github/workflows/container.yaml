name: Container

on:
  push:
  pull_request:

jobs:
  build:
    # Deduplicate jobs from pull requests and branch pushes within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    services:
      ispyb:
        image: ghcr.io/diamondlightsource/ispyb-database:v3.0.0
        ports:
          - 3306:3306
        env:
          MARIADB_ROOT_PASSWORD: rootpassword
        options: >
          --health-cmd "/usr/local/bin/healthcheck.sh --defaults-file=/ispyb/.my.cnf --connect"
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.4

      - name: Generate Image Name
        run: echo IMAGE_REPOSITORY=ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]' | tr '[_]' '[\-]') >> $GITHUB_ENV

      - name: Log in to GitHub Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.IMAGE_REPOSITORY }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
        with:
          driver-opts: network=host

      - name: Build Image
        uses: docker/build-push-action@v5.3.0
        with:
          build-args: DATABASE_URL=mysql://root:rootpassword@localhost:3306/ispyb_build
          target: deploy
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
          load: ${{ !(github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
